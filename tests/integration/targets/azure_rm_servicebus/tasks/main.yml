---
- name: Prepare random number
  ansible.builtin.set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: true

- name: Create a namespace
  register: namespace
  azure.azcollection.azure_rm_servicebus:
    name: ns{{ rpfx }}
    resource_group: "{{ resource_group }}"
    sku: premium
    tags:
      key1: value1

- name: Assert the namespace created
  ansible.builtin.assert:
    that:
      - namespace.id
      - namespace.changed
      - namespace.tags

- name: Create a namespace (idempontent)
  register: namespace
  azure.azcollection.azure_rm_servicebus:
    name: ns{{ rpfx }}
    resource_group: "{{ resource_group }}"

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not namespace.changed

- name: Create a queue
  register: queue
  azure.azcollection.azure_rm_servicebusqueue:
    name: queue{{ rpfx }}
    namespace: ns{{ rpfx }}
    resource_group: "{{ resource_group }}"
    max_message_size_in_kb: 2048
    max_size_in_mb: 2048

- name: Assert the queue created
  ansible.builtin.assert:
    that:
      - queue.id
      - queue.changed

- name: Create a topic (check mode)
  check_mode: true
  register: output
  azure.azcollection.azure_rm_servicebustopic:
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    duplicate_detection_time_in_seconds: 600
    max_message_size_in_kb: 2048
    max_size_in_mb: 2048

- name: Assert the check mode
  ansible.builtin.assert:
    that:
      - output.changed

- name: Create a topic
  register: output
  azure.azcollection.azure_rm_servicebustopic:
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    duplicate_detection_time_in_seconds: 600
    max_message_size_in_kb: 2048
    max_size_in_mb: 2048

- name: Assert the topic created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id
      - "'subscription_count' not in output"

- name: Create a topic (idempontent)
  register: output
  azure.azcollection.azure_rm_servicebustopic:
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    duplicate_detection_time_in_seconds: 600
    max_message_size_in_kb: 2048
    max_size_in_mb: 2048

- name: Assert idempotent
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Create test policy
  azure.azcollection.azure_rm_servicebussaspolicy:
    name: testpolicy
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    topic: topic{{ rpfx }}
    rights: manage

- name: Create a subscription
  register: subs
  azure.azcollection.azure_rm_servicebustopicsubscription:
    name: subs{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    topic: topic{{ rpfx }}

- name: Assert the subscription created
  ansible.builtin.assert:
    that:
      - subs.id
      - subs.changed

- name: Retrive topic
  register: facts
  azure.azcollection.azure_rm_servicebus_info:
    type: topic
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    show_sas_policies: true

- name: Assert the topic facts
  ansible.builtin.assert:
    that:
      - facts.servicebuses | length == 1
      - facts.servicebuses[0].id == output.id
      - facts.servicebuses[0].subscription_count == 1
      - facts.servicebuses[0].sas_policies.testpolicy
      - facts.servicebuses[0].sas_policies.testpolicy.rights == 'manage'

- name: Delete subscription
  azure.azcollection.azure_rm_servicebustopicsubscription:
    name: subs{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    topic: topic{{ rpfx }}
    state: absent

- name: Retrive topic
  register: facts
  azure.azcollection.azure_rm_servicebus_info:
    type: topic
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    show_sas_policies: true

- name: Assert the topic facts
  ansible.builtin.assert:
    that:
      - facts.servicebuses[0].subscription_count == 0
      - facts.servicebuses | length == 1

- name: Delete topic
  azure.azcollection.azure_rm_servicebustopic:
    name: topic{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    state: absent

- name: Retrive topic
  register: facts
  azure.azcollection.azure_rm_servicebus_info:
    name: topic{{ rpfx }}
    type: topic
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    show_sas_policies: true

- name: Assert the topic facts
  ansible.builtin.assert:
    that:
      - facts.servicebuses | length == 0

- name: Delete queue
  azure.azcollection.azure_rm_servicebusqueue:
    name: queue{{ rpfx }}
    resource_group: "{{ resource_group }}"
    namespace: ns{{ rpfx }}
    state: absent

- name: Delete namespace
  azure.azcollection.azure_rm_servicebus:
    name: ns{{ rpfx }}
    resource_group: "{{ resource_group }}"
    state: absent
