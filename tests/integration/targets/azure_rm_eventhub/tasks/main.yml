---
- name: Create random event hub and namespace
  ansible.builtin.set_fact:
    namespace_name: test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}
    name_rpfx: test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}

- name: Create Event Hub Namespace (check mode)
  check_mode: true
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    sku: Basic

- name: Assert the check mode result
  ansible.builtin.assert:
    that: results.changed

- name: Create Event Hub (check mode)
  check_mode: true
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    sku: Basic

- name: Assert the check mode result
  ansible.builtin.assert:
    that: results.changed

- name: Create Event Hub Namespace
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    sku: Basic

- name: Assert the event hub namespace created
  ansible.builtin.assert:
    that: results.changed

- name: Create Event Hub
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"

- name: Assert the event hub created
  ansible.builtin.assert:
    that: results.changed

- name: Update Namespace
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    sku: Standard
    tags:
      test: modified

- name: Assert the namespace updated
  ansible.builtin.assert:
    that:
      - results.changed
      - results.state.tags.test == 'modified'

- name: Update Event Hub
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    message_retention_in_days: 4
    state: present
    tags:
      test: modified

- name: Assert the event hub updated
  ansible.builtin.assert:
    that:
      - results.changed

- name: Retrieve Namespace
  register: results
  azure.azcollection.azure_rm_eventhub_info:
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"

- name: Test idempotent
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    sku: Standard
    tags:
      test: modified

- name: Assert idempotent success
  ansible.builtin.assert:
    that:
      - not results.changed

- name: Delete Event Hub
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent

- name: Delete Event Hub (idempotent)
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent

- name: Assert the event hub deleted
  ansible.builtin.assert:
    that: not results.changed

- name: Delete Namespace
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    state: absent

- name: Pause for 1 minutes to check namespace deleted
  ansible.builtin.pause:
    minutes: 1
  changed_when: true

- name: Delete Namespace (idempotent)
  register: results
  azure.azcollection.azure_rm_eventhub:
    location: eastus2
    namespace_name: "{{ namespace_name }}"
    resource_group: "{{ resource_group }}"
    state: absent

- name: Assert the namespace deleted
  ansible.builtin.assert:
    that: not results.changed
