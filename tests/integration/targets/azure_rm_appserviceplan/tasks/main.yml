---
- name: Prepare facts
  ansible.builtin.set_fact:
    resource_prefix: "{{ resource_group_secondary | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
  run_once: true

- name: Prepare facts
  ansible.builtin.set_fact:
    linux_plan_resource_group: "{{ resource_group_secondary }}"
    win_plan_name: "{{ (resource_prefix | replace('-', 'x'))[-8:] }}winplan"
    linux_plan_name: "{{ (resource_prefix | replace('-', 'x'))[-8:] }}linplan"
  run_once: true

- name: Create a windows plan
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    name: "{{ win_plan_name }}1"
    resource_group: "{{ resource_group }}"
    sku: B1

- name: Assert app service was created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id

- name: Create a linux plan
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}1"
    sku: S1
    is_linux: true
    number_of_workers: 1

- name: Assert app service was created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id

- name: Get app service plan by name
  register: output
  azure.azcollection.azure_rm_appserviceplan_info:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}1"

- name: Assert is_linux is True
  ansible.builtin.assert:
    that:
      - output.appserviceplans | length == 1
      - output.appserviceplans[0].is_linux == True

- name: Create linux app service plan idempotent
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}1"
    sku: S1
    is_linux: true
    number_of_workers: 1

- name: Assert app service is not updated
  ansible.builtin.assert:
    that: not output.changed

- name: Update a windows plan sku
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    name: "{{ win_plan_name }}1"
    resource_group: "{{ resource_group }}"
    sku: B2

- name: Assert app service was updated
  ansible.builtin.assert:
    that:
      - output.changed

- name: Update a linux plan number of workers
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}1"
    sku: S1
    is_linux: true
    number_of_workers: 2

- name: Assert app service was updated
  ansible.builtin.assert:
    that:
      - output.changed

- name: Create premium linux plan
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}-premium"
    sku: P1v2
    is_linux: true

- name: Assert app service was created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.id

- name: Create premium linux plan idempotent
  register: output
  azure.azcollection.azure_rm_appserviceplan:
    resource_group: "{{ linux_plan_resource_group }}"
    name: "{{ linux_plan_name }}-premium"
    sku: P1v2
    is_linux: true

- name: Assert app service is not updated
  ansible.builtin.assert:
    that: not output.changed
