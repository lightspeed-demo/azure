---
- name: Prepare random number
  ansible.builtin.set_fact:
    nsgname: "{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}"
    storageaccountname: stacc{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}
    dbname: mdb{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}
  run_once: true

- name: Call REST API
  register: output
  azure.azcollection.azure_rm_resource:
    api_version: "2018-02-01"
    resource_group: "{{ resource_group }}"
    provider: network
    resource_type: networksecuritygroups
    resource_name: "{{ nsgname }}"
    body:
      location: eastus
    idempotency: true

- name: Assert that something has changed
  ansible.builtin.assert:
    that: output.changed

- name: Call REST API
  register: output
  azure.azcollection.azure_rm_resource:
    api_version: "2018-02-01"
    resource_group: "{{ resource_group }}"
    provider: network
    resource_type: networksecuritygroups
    resource_name: "{{ nsgname }}"
    body:
      location: eastus
    idempotency: true

- name: Assert that nothing has changed
  ansible.builtin.assert:
    that: not output.changed

- name: Call REST API
  register: output
  azure.azcollection.azure_rm_resource:
    api_version: "2018-02-01"
    resource_group: "{{ resource_group }}"
    provider: network
    resource_type: networksecuritygroups
    resource_name: "{{ nsgname }}"
    body:
      location: eastus
      tags:
        a: abc
        b: cde
    idempotency: true

- name: Assert that something has changed
  ansible.builtin.assert:
    that: output.changed

- name: Try to get information about account
  register: output
  azure.azcollection.azure_rm_resource_info:
    api_version: "2018-02-01"
    resource_group: "{{ resource_group }}"
    provider: network
    resource_type: networksecuritygroups
    resource_name: "{{ nsgname }}"

- name: Assert value was returned
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response[0]['name'] != None
      - output.response | length == 1

- name: Try to query a list
  azure.azcollection.azure_rm_resource_info:
    api_version: "2018-02-01"
    resource_group: "{{ resource_group }}"
    provider: network

- name: Assert value was returned
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response[0]['name'] != None
      - output.response | length >= 1

- name: Try to query a list - same without API version
  azure.azcollection.azure_rm_resource_info:
    resource_group: "{{ resource_group }}"
    provider: network

- name: Assert value was returned
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response[0]['name'] != None
      - output.response | length >= 1

- name: Query all the resources in the resource group
  azure.azcollection.azure_rm_resource_info:
    resource_group: "{{ resource_group }}"

- name: Assert value was returned
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.response | length >= 1

- name: Create storage account that requires LRO polling
  register: output
  azure.azcollection.azure_rm_resource:
    polling_timeout: 600
    polling_interval: 60
    api_version: "2018-07-01"
    resource_group: "{{ resource_group }}"
    provider: Storage
    resource_type: storageAccounts
    resource_name: "{{ storageaccountname }}"
    body:
      sku:
        name: Standard_GRS
      kind: Storage
      location: eastus

- name: Assert that storage was successfully created
  ansible.builtin.assert:
    that: output['response']['name'] == '{{ storageaccountname }}'

- name: Try to storage keys -- special case when subresource part has no name
  register: keys
  azure.azcollection.azure_rm_resource:
    resource_group: "{{ resource_group }}"
    provider: storage
    resource_type: storageAccounts
    resource_name: "{{ storageaccountname }}"
    subresource:
      - type: listkeys
    api_version: 2018-03-01-preview
    method: POST

- name: Assert that key was returned
  ansible.builtin.assert:
    that: keys['response']['keys'][0]['value'] | length > 0

- name: Delete storage - without API version
  azure.azcollection.azure_rm_resource:
    polling_timeout: 600
    polling_interval: 60
    method: DELETE
    resource_group: "{{ resource_group }}"
    provider: Storage
    resource_type: storageAccounts
    resource_name: "{{ storageaccountname }}"
