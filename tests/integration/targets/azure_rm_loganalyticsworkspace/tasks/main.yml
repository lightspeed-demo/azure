---
- name: Prepare random number
  ansible.builtin.set_fact:
    name_rpfx: loganalytics{{ resource_group | hash('md5') | truncate(7, True, '') }}{{ 1000 | random }}
    retention_days: 60

- name: Create Log Analytics Workspace (Check Mode On)
  check_mode: true
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    intelligence_packs:
      Backup: true
      Containers: true
    retention_in_days: "{{ retention_days }}"
    resource_group: "{{ resource_group }}"

- name: Assert there is no log analytics workspace
  ansible.builtin.assert:
    that:
      - output.changed

- name: Get Log Analytics workspace information
  register: facts
  azure.azcollection.azure_rm_loganalyticsworkspace_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    show_intelligence_packs: true
    show_management_groups: true
    show_shared_keys: true
    show_usages: true

- name: Assert the log analytics workspace facts
  ansible.builtin.assert:
    that:
      - facts.workspaces | length == 0

- name: Create Log Analytics Workspace
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    intelligence_packs:
      Backup: true
      Containers: true
    retention_in_days: 30
    resource_group: "{{ resource_group }}"
    tags:
      key1: value1

- name: Assert the log analytics workspace created
  ansible.builtin.assert:
    that:
      - output.changed
      - output.retention_in_days == 30
      # - output.intelligence_packs | json_query('[?name == `Backup`].enabled') | first == true
      # - output.intelligence_packs | json_query('[?name == `Containers`].enabled') | first == true
      - output.sku == 'per_gb2018'
      - output.tags.key1 == 'value1'

- name: Update Log Analytics Workspace
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    intelligence_packs:
      Backup: true
      Containers: true
    retention_in_days: "{{ retention_days }}"
    resource_group: "{{ resource_group }}"
    tags:
      key1: value1
      key2: value2

- name: Assert the log analytics workspace updated
  ansible.builtin.assert:
    that:
      - output.changed
      - output.retention_in_days == retention_days
      - output.tags.key2 == 'value2'

- name: Get Log Analytics workspace information (Show full information)
  register: facts
  azure.azcollection.azure_rm_loganalyticsworkspace_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    show_intelligence_packs: true
    show_management_groups: true
    show_shared_keys: true
    show_usages: true

- name: Assert the log analytics workspace facts
  ansible.builtin.assert:
    that:
      - not facts.changed
      - facts.workspaces | length > 0
      - facts.workspaces[0].retention_in_days == retention_days
      - facts.workspaces[0].intelligence_packs | length > 0
      # - facts.workspaces[0].intelligence_packs | json_query('[?name == `Backup`].enabled') | first == true
      # - facts.workspaces[0].intelligence_packs | json_query('[?name == `Containers`].enabled') | first == true
      - facts.workspaces[0].shared_keys is defined
      - facts.workspaces[0].shared_keys.primary_shared_key is defined
      - facts.workspaces[0].shared_keys.secondary_shared_key is defined
      - facts.workspaces[0].usages is defined
      - facts.workspaces[0].usages | length > 0
      - facts.workspaces[0].management_groups is defined
      - facts.workspaces[0].sku == 'per_gb2018'

- name: Get Log Analytics workspace information (Show default information)
  register: facts
  azure.azcollection.azure_rm_loganalyticsworkspace_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"

- name: Assert the log analytics workspace facts
  ansible.builtin.assert:
    that:
      - not facts.changed
      - facts.workspaces | length > 0
      - facts.workspaces[0].retention_in_days == retention_days
      - facts.workspaces[0].intelligence_packs is not defined
      - facts.workspaces[0].shared_keys is not defined
      - facts.workspaces[0].usages is not defined
      - facts.workspaces[0].management_groups is not defined
      - facts.workspaces[0].sku == 'per_gb2018'

- name: Create Log Analytics workspace (Test Idempotence)
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    retention_in_days: "{{ retention_days }}"

- name: Assert the log anaytics workspace already created
  ansible.builtin.assert:
    that:
      - not output.changed

- name: Remove Log Analytics workspace (Check Mode On)
  check_mode: true
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent

- name: Assert there is no log anaytics workspace
  ansible.builtin.assert:
    that:
      - output.changed

- name: Get Log Analytics workspace information(Check still exists after remove Check Mode On)
  register: facts
  azure.azcollection.azure_rm_loganalyticsworkspace_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"

- name: Assert the log analytics workspace facts
  ansible.builtin.assert:
    that:
      - facts.workspaces | length == 1

- name: Remove Log Analytics workspace
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent
    force: true

- name: Assert the log analytics workspace deleted
  ansible.builtin.assert:
    that:
      - output.changed

- name: Get Log Analytics workspace information
  register: facts
  azure.azcollection.azure_rm_loganalyticsworkspace_info:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"

- name: Assert the log analytics workspace facts
  ansible.builtin.assert:
    that:
      - facts.workspaces | length == 0

- name: Remove Log Analytics workspace (Test Idempotence)
  register: output
  azure.azcollection.azure_rm_loganalyticsworkspace:
    name: "{{ name_rpfx }}"
    resource_group: "{{ resource_group }}"
    state: absent
    force: true

- name: Assert the log analytics workspace deleted
  ansible.builtin.assert:
    that:
      - not output.changed
