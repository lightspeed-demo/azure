---
- name: Create random dns label
  ansible.builtin.set_fact:
    dns_label: test{{ resource_group | hash('md5') | truncate(16, True, '') + (65535 | random | string) }}

- name: Error Create Azure Deploy
  register: output
  ignore_errors: true
  azure.azcollection.azure_rm_deployment:
    resource_group: "{{ resource_group }}"
    location: eastus
    template_link: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json
    deployment_name: "{{ dns_label }}"
    parameters:
      adminUsername:
        value: chouseknecht
      adminPassword:
        value: password123!
      dnsLabelPrefix:
        value: "{{ dns_label }}"
      ubuntuOSVersion:
        value: Never-LTS

- name: Create Azure Deploy
  register: output
  azure.azcollection.azure_rm_deployment:
    resource_group: "{{ resource_group }}"
    location: eastus
    template_link: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/d01a5c06f4f1bc03a049ca17bbbd6e06d62657b3/101-vm-simple-linux/azuredeploy.json
    deployment_name: "{{ dns_label }}"
    parameters:
      adminUsername:
        value: chouseknecht
      adminPassword:
        value: password123!
      dnsLabelPrefix:
        value: "{{ dns_label }}"
      ubuntuOSVersion:
        value: 16.04.0-LTS

- name: Add new instance to host group
  ansible.builtin.add_host:
    hostname: "{{ item.vm_name }}"
    ansible_host: "{{ item['ips'][0].public_ip }}"
    ansible_user: chouseknecht
    ansible_ssh_pass: password123!
    groupname: "{{ output.deployment.instances }}"

- name: Get Deployment Facts for Resource Group
  azure.azcollection.azure_rm_deployment_info:

- name: Print the deployment facts
  ansible.builtin.debug:
    var: output

- name: Get Deployment Facts for named deployment
  azure.azcollection.azure_rm_deployment_info:
    resource_group: "{{ resource_group }}"

- name: Print the deployment facts
  ansible.builtin.debug:
    var: output

- name: Assert that values are returned
  ansible.builtin.assert:
    that:
      - not output.changed
      - output.deployments[0]['provisioning_state'] != None
      - output.deployments[0]['output_resources'] | length > 0
      - output.deployments[0]['outputs'] | length > 0
